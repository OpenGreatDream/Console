using System;
using System.Runtime.InteropServices;
using static MinConsole.MinConsoleNativeStructs;

namespace MinConsole
{
    //This class is auto generated by NativeFunctionTranslator.
    internal class MinConsoleNativeFuncs
    {
        //>>>insert_here<<<
        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinReadFromClipboard(wchar** data);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinFreeClipboardData(wchar* data);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinWriteToClipboard(const wchar* data, int charCount);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinIsUsingLegacyConsole(bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinUseLegacyConsole(bool yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinInitConsoleSession(ConsoleSession* cons);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinEnableConsoleVT(ConsoleSession* cons);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetConsolePalette(ConsoleSession* cons, DWORD index, Color24* color);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetConsolePalette(ConsoleSession* cons, DWORD index, Color24 color);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetConsoleMode(ConsoleSession* cons, ConsoleMode* consoleMode);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetConsoleMode(ConsoleSession* cons, ConsoleMode consoleMode);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetConsoleFont(ConsoleSession* cons, ConsoleFont* consoleFont);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetConsoleFont(ConsoleSession* cons, ConsoleFont consoleFont);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetKey(int virtualKey, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetKeyDown(int virtualKey, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetKeyUp(int virtualKey, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetKeyPressed(int virtualKey, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetKeyState(int virtualKey, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinCheckMouseAxis();

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinResetMouseAxis();

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetMouseAxis(MouseAxis axis, int* diff);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetRandomValue(uint minimum, uint maximum, uint* value);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinInitTimer(MinTimer* timer);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinStartTimer(MinTimer* timer);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinStopTimer(MinTimer* timer);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinTimeTimer(const MinTimer* timer, double* deltaTime, int iterations = 1000);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetFuncFromDll(const wchar* dllName, const char* funcName, FARPROC* funcPtr);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetConsoleIcon(HICON hIcon);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetForegroundWindow(HWND* windowHandle);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetConsoleWindow(HWND* windowHandle);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetWindowPos(HWND windowHandle, POINT* pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetWindowPos(HWND windowHandle, POINT pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetWindowSize(HWND windowHandle, POINT* size);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetWindowSize(HWND windowHandle, POINT size);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetDesktopSize(POINT* size);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetClientSize(HWND windowHandle, POINT* size);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetMousePos(POINT* pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetMappedMousePos(HWND windowHandle, POINT* pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetMouseInClient(HWND windowHandle, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetWindowInFocus(HWND windowHandle, bool* yes);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetCenterPosOfWindowInDesktop(HWND windowHandle, POINT* pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetCenterPosOfWindow(HWND windowHandle, POINT* pos);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetWindowMenuVisibility(HWND windowHandle, bool visible);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinMaximizeWindow(HWND windowHandle, bool maximize);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetWindowAlpha(HWND windowHandle, byte* alpha);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinSetWindowAlpha(HWND windowHandle, byte alpha);

        [DllImport("MinConsoleNative.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true, CharSet = CharSet.Unicode)]
        public extern static bool MinGetWinVersion(uint* MajorVer, uint* MinorVer, uint* BuildNumber);

    }
}
